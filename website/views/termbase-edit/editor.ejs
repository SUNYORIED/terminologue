<!DOCTYPE HTML>
<html>
	<head>
		<meta charset="UTF-8"/>
		<title>Screenful Editor</title>
		<script type="text/javascript">var rootPath="/../../";</script>
		<script type="text/javascript" src="../../libs/jquery.js"></script>
		<link type="text/css" rel="stylesheet" href="../../libs/screenful/screenful-theme-green.css" />
    <link type="text/css" rel="stylesheet" href="../../libs/screenful/screenful.css" />
		<script type="text/javascript" src="../../libs/screenful/screenful.js"></script>
		<script type="text/javascript" src="../../libs/screenful/screenful-loc-en.js"></script>
		<script type="text/javascript" src="../../../libs/js.cookie.js"></script>

		<script type="text/javascript" src="../../libs/screenful/screenful-editor.js"></script>
		<link type="text/css" rel="stylesheet" href="../../libs/screenful/screenful-editor.css" />
		<script type="text/javascript">
		Screenful.Editor.createUrl="./create.json";
		Screenful.Editor.readUrl="./read.json";
		Screenful.Editor.updateUrl="./update.json";
		Screenful.Editor.deleteUrl="./delete.json";
		</script>

		<script type="text/javascript">
		// Screenful.Editor.viewer=function(div, entry){
		// 	$(div).html(entry.id);
		// };
		</script>

		<link type="text/css" rel="stylesheet" href="../../libs/fy/fy.css" />
		<script type="text/javascript" src="../../libs/fy/fy.js"></script>
		<script type="text/javascript" src="../../views/termbase-edit/fy-entry.js"></script>
		<script type="text/javascript">
		Screenful.Editor.editor=function(div, entry, uneditable){
			if(!entry) {
				var json={
					desigs: [],
					domains: [],
				};
				entry={content: JSON.stringify(json)};
			}
			Fy.render($(div), JSON.parse(entry.content), Spec, uneditable);
			// $(div).html("<textarea style='padding: 10px; box-sizing: border-box; width: 100%; height: 400px; resize: vertical; border: 0px; box-shadow: inset 0px 0px 5px #999999; color: var(--link); border-radius: 4px; margin-top: 10px; font-size: 0.9rem;'></textarea>");
			// $(div).find("textarea").focus().val(JSON.stringify(JSON.parse(entry.content), null, "  "));
		};
		Screenful.Editor.harvester=function(div){
			var ret=Fy.harvest($(div));
			return JSON.stringify(ret, null, "  ");
			//return $(div).find("textarea").val();
		};
		</script>

		<script type="text/javascript">
		Screenful.Editor.allowSourceCode=true;
		Screenful.Editor.formatSourceCode=function(str){
			return Screenful.formatJson(str);
		};
		Screenful.Editor.validateSourceCode=function(str){
			return Screenful.isWellFormedJson(str);
		};
		Screenful.Editor.cleanupSourceCode=function(str){
			return str;
		};
		</script>

		<link type="text/css" rel="stylesheet" href="../../libs/screenful/screenful-history.css" />
		<script type="text/javascript" src="../../libs/screenful/screenful-history.js"></script>
		<script type="text/javascript">
		Screenful.History.historyUrl="./history.json";
		Screenful.History.isDeletion=function(revision){
			return revision.action=="delete" || revision.action=="purge";
		};
		Screenful.History.getRevisionID=function(revision){
			return revision.revision_id;
		};
		Screenful.History.printAction=function(revision){
			var content="";
			//actions: delete | create | update | purge
			//historiography: {apikey: apikey} | {uploadStart: uploadStart, filename: filename}
			content+="<div style='white-space: nowrap'>";
				if(revision.action=="create") content+="<b>Created</b>";
				else if(revision.action=="update") content+="<b>Changed</b>";
				else if(revision.action=="delete") content+="<b>Deleted</b>";
				else if(revision.action=="purge") content+="<b>Bulk-deleted</b>";
				if(revision.historiography.uploadStart) content+=" while uploading";
			content+="</div>";
			if(revision.email) content+="<div style='white-space: nowrap'><b>By:</b> "+revision.email+"</div>";
			content+="<div style='white-space: nowrap'><b>When:</b> "+revision.when+"</div>";
			return content;
			//return revision.action+", "+revision.email+", "+revision.when+", "+JSON.stringify(revision.historiography, null, "<br/>");
		};
		Screenful.History.fakeEntry=function(revision){
			return {id: revision.entry_id, content: revision.content};
		};
		</script>

		<script type="text/javascript">
		var termbaseConfigs=window.parent.termbaseConfigs;
		var termbaseMetadata=window.parent.termbaseMetadata;
		</script>
	</head>
	<body>
	</body>
</html>
